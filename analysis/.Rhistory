axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 60, hjust=0)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 60, hjust=1)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 60, vjust=0.5)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 60, vjust=1)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 60, vjust=1, hjust=0.5)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 90, vjust=1, hjust=0.5)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 90, vjust=.5, hjust=1)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 90, vjust=.5, hjust=-1)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 90, vjust=.5, hjust=1)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 90, vjust=.5, hjust=0)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 90, vjust=.5, hjust=1)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_void() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 90, vjust=.5, hjust=1)) +
ylab("Mutations") + xlab("Proteins")
p
plotTab <- testRes_cll %>% dplyr::filter(mutName %in% c("IGHV.status", "trisomy12")) %>%
mutate(starSign = ifelse(p.adj <=0.1, "*", ""),
pSign = -log10(p)*sign(FC))
#subset for mutation with at least one significant associations
plotTar <- unique(filter(plotTab, p.adj <= 0.1)$targetName)
plotMut <- unique(filter(plotTab, p.adj <= 0.1)$mutName)
plotTab <- plotTab %>% dplyr::filter( targetName %in% plotTar , mutName %in% plotMut)
p <- ggplot(data=plotTab, aes(y=mutName, x = targetName, fill=pSign)) +
geom_tile(col = "black") + geom_text(aes(label = starSign), size=5, vjust=0.5) +
scale_fill_gradient2(low = "#BC3C29FF", high = "#0072B5FF", name = bquote(-log[10]*italic("P"))) +
theme_minimal() +
theme(panel.grid.major = element_blank(),
legend.text = element_text(size=14),
legend.title = element_text(size=16),
axis.title = element_text(size=18),
axis.text.y = element_text(size=18),
axis.text.x = element_text(size=18, angle = 90, vjust=.5, hjust=1)) +
ylab("Mutations") + xlab("Proteins")
p
load("../data/RNAseq/ddsCampo.RData")
ddsCLL <- ddsCampo[,!is.na(ddsCampo$IGHV) ]
ddsCLL <- estimateSizeFactors(ddsCLL)
ddsCLL <- ddsCLL[rowSums(counts(ddsCLL)) > 10,]
ddsCLL.voom <- ddsCLL
assay(ddsCLL.voom) <- limma::voom(counts(ddsCLL), lib.size = ddsCLL$sizeFactor)$E
ighv <- factor(ddsCLL.voom$IGHV, levels = c("mutated","unmutated"))
designMat <- model.matrix(~ 1 + ighv)
enrichRes <- runCamera(assay(ddsCLL.voom), designMat, gmts$H,
id = rowData(ddsCLL.voom)$symbol,
method = "camera", pCut = 0.01, ifFDR = TRUE, removePrefix = "HALLMARK_",
plotTitle = "ICGC-CLL cohort (Hallmarks, 5% FDR)",
setToHighlight = highSet, setMap = setMap, insideLegend = TRUE)
library(RColorBrewer)
library(DESeq2)
library(limma)
library(piano)
library(Biobase)
library(tidyverse)
source("../code/utils.R")
knitr::opts_chunk$set(dev=c("png","pdf"))
load("../data/RNAseq/gse39411.RData")
gmts = list(H = "../data/RNAseq/h.all.v6.2.symbols.gmt")
setMap <- read_tsv("../data/RNAseq/setToPathway.txt", col_types = "cc")
#gse <- gse39411[[1]]
#subset for only B-cell and CLL without transfection
#gse <- gse[,gse$`transfected with:ch1` == "none" &
#             gse$`time point (min):ch1` == "T390" &
#             gse$`cell type:ch1` == "chronic lymphocytic leukemia B-cell"]
#save
#save(gse, file = "../data/RNAseq/gse39411.RData")
#vst
gse.vst <- gse
exprs(gse.vst) <- limma::normalizeVSN(gse.vst)
patAnno <- pData(gse.vst) %>% rownames_to_column("sampleID") %>%
select(sampleID, description) %>%
separate(description, into = c("patID","stimulation","timePoint"),sep = "_") %>%
mutate(cellType = substr(patID,1,nchar(patID)-1)) %>%
mutate(cellType = ifelse(cellType == "N", "B-cell",cellType)) %>%
mutate(timePoint = abs(as.integer(gsub("T","",timePoint)))) %>%
mutate(stimulation = factor(stimulation, levels = c("US","S")))
pData(gse.vst) <- patAnno[match(colnames(gse.vst), patAnno$sampleID),]
load("../data/RNAseq/ddsCampo.RData")
ddsCLL <- ddsCampo[,!is.na(ddsCampo$IGHV) ]
ddsCLL <- estimateSizeFactors(ddsCLL)
ddsCLL <- ddsCLL[rowSums(counts(ddsCLL)) > 10,]
ddsCLL.voom <- ddsCLL
assay(ddsCLL.voom) <- limma::voom(counts(ddsCLL), lib.size = ddsCLL$sizeFactor)$E
ighv <- factor(ddsCLL.voom$IGHV, levels = c("mutated","unmutated"))
designMat <- model.matrix(~ 1 + ighv)
enrichRes <- runCamera(assay(ddsCLL.voom), designMat, gmts$H,
id = rowData(ddsCLL.voom)$symbol,
method = "camera", pCut = 0.01, ifFDR = TRUE, removePrefix = "HALLMARK_",
plotTitle = "ICGC-CLL cohort (Hallmarks, 5% FDR)",
setToHighlight = highSet, setMap = setMap, insideLegend = TRUE)
design(ddsCLL) <- ~IGHV
colData(ddsCLL)
load("../data/RNAseq/ddsCampo.RData")
ddsCLL <- ddsCampo[,!is.na(ddsCampo$IGHV) ]
ddsCLL <- estimateSizeFactors(ddsCLL)
ddsCLL <- ddsCLL[rowSums(counts(ddsCLL)) > 10,]
ddsCLL.voom <- ddsCLL
assay(ddsCLL.voom) <- limma::voom(counts(ddsCLL), lib.size = ddsCLL$sizeFactor)$E
design(ddsCLL)
design(ddsCLL) <- ~ IGHV
ddsCLL$IGHV <- factor(ddsCLL$IGHV, levels = c("unmutated","mutated"))
design(ddsCLL) <- ~ IGHV
deRes <- DESeq(ddsCLL)
resTab <- results(deRes, tidy = TRUE)
resTab
resTab <- results(deRes, tidy = TRUE) %>%
mutate(symbol = rowData(ddsCLL[row,])$symbol)
resTab
geneList <- c("CDC25","CDK1","CCNE1")
geneList
sigList <- filter(resTab, symbol %in% geneList)
sigList
geneList <- c("CDC25A","CDK1","CCNE1")
sigList <- filter(resTab, symbol %in% geneList)
geneList <- c("CDC25A","CDK1","CCNE1")
sigList <- filter(resTab, symbol %in% geneList)
sigToEnv()
sigTab
geneList <- c("CDC25A","CDK1","CCNE1")
sigTab <- filter(resTab, symbol %in% geneList)
sigTab
id <- sigTab[i,]$row
plotTab <- tibble(expr = counts(ddsCLL)[id,])
i
i<-1
symol <- sigTab[i,]$symbol
pval <- sigTab[i,]$pvalue
id <- sigTab[i,]$row
plotTab <- tibble(expr = counts(ddsCLL)[id,])
plotTab
plotTab <- tibble(expr = log2(counts(ddsCLL)[id,]),
IGHV.status = ddsCLL$IGHV)
plotTab
plotTab <- tibble(expr = log2(counts(ddsCLL)[id,]),
IGHV.status = str_to_title(ddsCLL$IGHV))
plotTab
plotTab <- tibble(expr = log2(counts(ddsCLL)[id,]),
IGHV.status = str_to_title(ddsCLL$IGHV),
patID = colnames(ddsCLL))
numTab <- group_by(plotTab, IGHV.status) %>%
summarise(n=length(patID))
plotTab <- left_join(plotTab, numTab, by = "IGHV.status") %>%
mutate(mutNum = sprintf("%s\n(n=%s)", IGHV.status, n)) %>%
mutate(mutNum = factor(mutNum, levels = unique(mutNum)))
titleText <- sprintf("%s ~ IGHV status", drug)
titleText <- sprintf("%s", symbol)
symbol <- sigTab[i,]$symbol
pval <- sigTab[i,]$pvalue
id <- sigTab[i,]$row
plotTab <- tibble(expr = log2(counts(ddsCLL)[id,]),
IGHV.status = str_to_title(ddsCLL$IGHV),
patID = colnames(ddsCLL))
numTab <- group_by(plotTab, IGHV.status) %>%
summarise(n=length(patID))
plotTab <- left_join(plotTab, numTab, by = "IGHV.status") %>%
mutate(mutNum = sprintf("%s\n(n=%s)", IGHV.status, n)) %>%
mutate(mutNum = factor(mutNum, levels = unique(mutNum)))
titleText <- sprintf("%s", symbol)
pval <- formatNum(pval, digits = 1, format="e")
titleText <- bquote(atop(.(titleText), "("~italic("P")~"="~.(pval)~")"))
ggplot(plotTab, aes(x = mutNum,y = expr)) +
stat_boxplot(geom = "errorbar", width = 0.3) +
geom_boxplot(outlier.shape = NA, col="black", width=0.4) +
geom_beeswarm(cex=2, size =1, aes(col = mutNum)) + theme_classic() +
xlab("") + ylab("Viability") + ggtitle(titleText) + xlab("") +
scale_color_manual(values = c("#0072B5FF","#BC3C29FF")) +
ylim(0.5, 1.2) +
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.title = element_text(size=18),
axis.text = element_text(size=18),
plot.title = element_text(size= 18, face = "bold", hjust = 0.5),
legend.position = "none",
axis.title.x = element_text(face="bold"))
ggplot(plotTab, aes(x = mutNum,y = expr)) +
stat_boxplot(geom = "errorbar", width = 0.3) +
geom_boxplot(outlier.shape = NA, col="black", width=0.4) +
geom_beeswarm(cex=2, size =1, aes(col = mutNum)) + theme_classic() +
xlab("") + ylab("log2(RNAseq counts)") + ggtitle(titleText) + xlab("") +
scale_color_manual(values = c("#0072B5FF","#BC3C29FF")) +
ylim(0.5, 1.2) +
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.title = element_text(size=18),
axis.text = element_text(size=18),
plot.title = element_text(size= 18, face = "bold", hjust = 0.5),
legend.position = "none",
axis.title.x = element_text(face="bold"))
plotTab
ggplot(plotTab, aes(x = mutNum,y = expr)) +
stat_boxplot(geom = "errorbar", width = 0.3) +
geom_boxplot(outlier.shape = NA, col="black", width=0.4)
ggplot(plotTab, aes(x = mutNum,y = expr)) +
stat_boxplot(geom = "errorbar", width = 0.3) +
geom_boxplot(outlier.shape = NA, col="black", width=0.4) +
geom_beeswarm(cex=2, size =1, aes(col = mutNum)) + theme_classic()
ggplot(plotTab, aes(x = mutNum,y = expr)) +
stat_boxplot(geom = "errorbar", width = 0.3) +
geom_boxplot(outlier.shape = NA, col="black", width=0.4) +
geom_beeswarm(size =1, aes(col = mutNum)) + theme_classic() +
xlab("") + ylab("log2(RNAseq counts)") + ggtitle(titleText) + xlab("") +
scale_color_manual(values = c("#0072B5FF","#BC3C29FF")) +
ylim(0.5, 1.2) +
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.title = element_text(size=18),
axis.text = element_text(size=18),
plot.title = element_text(size= 18, face = "bold", hjust = 0.5),
legend.position = "none",
axis.title.x = element_text(face="bold"))
plotTab$expr
plotTab <- tibble(expr = log2(counts(ddsCLL)[id,]+1),
IGHV.status = str_to_title(ddsCLL$IGHV),
patID = colnames(ddsCLL))
numTab <- group_by(plotTab, IGHV.status) %>%
summarise(n=length(patID))
plotTab <- left_join(plotTab, numTab, by = "IGHV.status") %>%
mutate(mutNum = sprintf("%s\n(n=%s)", IGHV.status, n)) %>%
mutate(mutNum = factor(mutNum, levels = unique(mutNum)))
titleText <- sprintf("%s", symbol)
pval <- formatNum(pval, digits = 1, format="e")
titleText <- bquote(atop(.(titleText), "("~italic("P")~"="~.(pval)~")"))
ggplot(plotTab, aes(x = mutNum,y = expr)) +
stat_boxplot(geom = "errorbar", width = 0.3) +
geom_boxplot(outlier.shape = NA, col="black", width=0.4) +
geom_beeswarm(cex=2, size =1, aes(col = mutNum)) +
theme_classic() +
xlab("") + ylab("log2(RNAseq counts)") + ggtitle(titleText) + xlab("") +
scale_color_manual(values = c("#0072B5FF","#BC3C29FF")) +
ylim(0.5, 1.2) +
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.title = element_text(size=18),
axis.text = element_text(size=18),
plot.title = element_text(size= 18, face = "bold", hjust = 0.5),
legend.position = "none",
axis.title.x = element_text(face="bold"))
ggplot(plotTab, aes(x = mutNum,y = expr)) +
stat_boxplot(geom = "errorbar", width = 0.3) +
geom_boxplot(outlier.shape = NA, col="black", width=0.4) +
geom_beeswarm(cex=2, size =1, aes(col = mutNum)) +
theme_classic() +
xlab("") + ylab("log2(RNAseq counts)") + ggtitle(titleText) + xlab("") +
scale_color_manual(values = c("#0072B5FF","#BC3C29FF")) +
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.title = element_text(size=18),
axis.text = element_text(size=18),
plot.title = element_text(size= 18, face = "bold", hjust = 0.5),
legend.position = "none",
axis.title.x = element_text(face="bold"))
geneList <- c("CDC25A","CDK1","CCNE1")
sigTab <- filter(resTab, symbol %in% geneList)
pList <- lapply(seq(nrow(sigTab)), function(i) {
symbol <- sigTab[i,]$symbol
pval <- sigTab[i,]$pvalue
id <- sigTab[i,]$row
plotTab <- tibble(expr = log2(counts(ddsCLL)[id,]+1),
IGHV.status = str_to_title(ddsCLL$IGHV),
patID = colnames(ddsCLL))
numTab <- group_by(plotTab, IGHV.status) %>%
summarise(n=length(patID))
plotTab <- left_join(plotTab, numTab, by = "IGHV.status") %>%
mutate(mutNum = sprintf("%s\n(n=%s)", IGHV.status, n)) %>%
mutate(mutNum = factor(mutNum, levels = unique(mutNum)))
titleText <- sprintf("%s", symbol)
pval <- formatNum(pval, digits = 1, format="e")
titleText <- bquote(atop(.(titleText), "("~italic("P")~"="~.(pval)~")"))
ggplot(plotTab, aes(x = mutNum,y = expr)) +
stat_boxplot(geom = "errorbar", width = 0.3) +
geom_boxplot(outlier.shape = NA, col="black", width=0.4) +
geom_beeswarm(cex=2, size =1, aes(col = mutNum)) +
theme_classic() +
xlab("") + ylab("log2(RNAseq counts)") + ggtitle(titleText) + xlab("") +
scale_color_manual(values = c("#0072B5FF","#BC3C29FF")) +
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.title = element_text(size=18),
axis.text = element_text(size=18),
plot.title = element_text(size= 18, face = "bold", hjust = 0.5),
legend.position = "none",
axis.title.x = element_text(face="bold"))
})
noY <- theme(axis.line.y = element_blank(), axis.ticks.y = element_blank(),
axis.text.y = element_blank(), axis.title.y = element_blank())
cowplot::plot_grid(pList[[1]],pList[[2]]+noY, pList[[3]] + noY, nrow=1,
rel_widths = c(1.1,1,1))
geneList <- c("CDC25A","CDK1","CCNE1")
sigTab <- filter(resTab, symbol %in% geneList)
pList <- lapply(seq(nrow(sigTab)), function(i) {
symbol <- sigTab[i,]$symbol
pval <- sigTab[i,]$pvalue
id <- sigTab[i,]$row
plotTab <- tibble(expr = log2(counts(ddsCLL)[id,]+1),
IGHV.status = str_to_title(ddsCLL$IGHV),
patID = colnames(ddsCLL))
numTab <- group_by(plotTab, IGHV.status) %>%
summarise(n=length(patID))
plotTab <- left_join(plotTab, numTab, by = "IGHV.status") %>%
mutate(mutNum = sprintf("%s\n(n=%s)", IGHV.status, n)) %>%
mutate(mutNum = factor(mutNum, levels = unique(mutNum)))
titleText <- sprintf("%s", symbol)
pval <- formatNum(pval, digits = 1, format="e")
titleText <- bquote(atop(.(titleText), "("~italic("P")~"="~.(pval)~")"))
ggplot(plotTab, aes(x = mutNum,y = expr)) +
stat_boxplot(geom = "errorbar", width = 0.3) +
geom_boxplot(outlier.shape = NA, col="black", width=0.4) +
geom_beeswarm(cex=2, size =1, aes(col = mutNum)) +
theme_classic() +
xlab("") + ylab("log2(RNAseq counts)") + ggtitle(titleText) + xlab("") +
scale_color_manual(values = c("#0072B5FF","#BC3C29FF")) +
theme(axis.line.x = element_blank(), axis.ticks.x = element_blank(),
axis.title = element_text(size=18),
axis.text = element_text(size=18),
plot.title = element_text(size= 18, face = "bold", hjust = 0.5),
legend.position = "none",
axis.title.x = element_text(face="bold"))
})
noY <- theme(axis.title.y = element_blank())
cowplot::plot_grid(pList[[1]],pList[[2]]+noY, pList[[3]] + noY, nrow=1,
rel_widths = c(1.1,1,1))
